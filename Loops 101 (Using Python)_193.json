{
    "course": {
        "id": "193",
        "name": "Loops 101 (Using Python)",
        "logo": "https",
        "notes": null,
        "days_to_complete": null,
        "short_description": "Let us understand loops in depth.",
        "type": "html",
        "course_type": "json",
        "lang_available": [
            "en",
            "hi"
        ],
        "exercises": [
            {
                "id": "6525",
                "parent_exercise_id": null,
                "course_id": "193",
                "name": "introduction",
                "slug": "loops-101_json__introduction_json",
                "sequence_num": 0,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "What are <span style=\"\">loops</span>?"
                    },
                    {
                        "component": "text",
                        "value": "If we want to do a task again and again, so computers can help us with that task."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Not Translated"
                    },
                    {
                        "component": "text",
                        "value": "If I want to send mail to my 100 friends to inform about certain event. If I send the mails one by one it will be a very tedious task for me and I might commit a mistake also. With the help of <span style=\"\">loops</span> we can do this work very easily and efficiently."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Writing <span style=\"\">code</span> for <span style=\"\">loops</span>"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 0<br>while counter < 5:<br>&emsp;print(\"NavGurukul\")<br>&emsp;counter = counter + 1"
                    },
                    {
                        "component": "text",
                        "value": "In this <span style=\"\">code</span> :"
                    },
                    {
                        "component": "text",
                        "value": "Take a variable named as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> whose value is 0. Same thing is happening in the flowchart.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Then a <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while</span> loop statement is written with the condition <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter &lt; 5</span>. <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">While</span> statement means (till). So,<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while</span> loop tells python that till the given condition <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span>, you can run the loop.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "When the loop finishes, the code outside the while loop will run. To understand the run the code given below.",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 0 <br>while counter < 5:<br>&emsp;print(\"NavGurukul\")<br>&emsp;counter = counter + 1<br>print(\"Yeh sirf ek baar print hoga\")"
                    },
                    {
                        "component": "text",
                        "value": "If you run this <span style=\"\">code</span> so<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">\"NavGurukul\"</span>will be printed 5 times and last line is printed one time."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "One more example"
                    },
                    {
                        "component": "text",
                        "value": "Suppose we need to write a <span style=\"\">code</span> where we need to print the numbers divisible by 2 between 1 to 100."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 1<br>while counter < 100:<br>&emsp;  if counter % 2 == 0:<br>&emsp;&emsp;&emsp;print(counter)<br>&emsp;  counter = counter + 1"
                    },
                    {
                        "component": "image",
                        "value": "https://merakilearn.s3.ap-south-1.amazonaws.com/course_images/loops-101_json/assets/example3.jpeg",
                        "alt": "introduction_key13"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note:"
                    },
                    {
                        "component": "text",
                        "value": "Here, we have taken the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> as 1  as we have to print from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 100</span> and not from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">0 to 99</span>."
                    },
                    {
                        "component": "text",
                        "value": "In this video, we will understand <span style=\"\">loops</span> and learn how to write their <span style=\"\">code</span>."
                    },
                    {
                        "component": "text",
                        "value": "Loops help us do the same things again and again. The same work can be done again and again.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Take an example of getting laptops from a car to the house. If there are 50 laptops in the car.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Explain this from the concept of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">(till / until)</span>. <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Until</span> the laptops inside the home becomes 0 <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">till</span> then take the laptops and keep them in the car."
                    },
                    {
                        "component": "text",
                        "value": "Do this work again and again.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "But till when we will do this work? This is decided by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span>.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Whatever condition we put inside  <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">till then</span> the loop runs.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Here, under the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span> condition, we will write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">laptops &gt;= 10</span>.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Means when laptops become 10 or greater than 10 then stop doing the work.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "What is the work inside <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span>?The work inside until is to bring a laptop from home and keep it in the car.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "The moment this work is done one time, one laptop becomes less.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "We will write this in python.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Take the example of teaching this in python."
                    },
                    {
                        "component": "text",
                        "value": "Let's say the total number of laptops is 10. <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Laptops = 0</span>, this variable will maintain the number of laptops.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Until the number of laptops becomes 10, till then bring the laptops from the home and keep it in the car.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while laptops &lt;= 10</span> means this work happens 10 times.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Our work is to keep the laptops in the car? print( \"One laptop kept in the car.\")",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Then how we will track that we have kept the laptop or done our work?",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "or that we will add +1 to laptop variable means that much laptop we kept in the car.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Let's do the dry run of the same program to see if this works fine.",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Second we will write the same program in the python visualizer to see if it works the same way as we thought it would. And now explain how the visualizer would run this code.",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    },
                    {
                        "component": "text",
                        "value": "Similarly take another example of printing numbers from 1 to 20.",
                        "decoration": {
                            "type": "number",
                            "value": 6
                        }
                    },
                    {
                        "component": "text",
                        "value": "Take another example of how to print the even numbers from 20 to 40.",
                        "decoration": {
                            "type": "number",
                            "value": 7
                        }
                    },
                    {
                        "component": "text",
                        "value": "In the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20 to 40</span> example talk about where to add the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">if statements</span>. Adding the<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">if statement outside and adding the if statement inside.</span> (This also needs to be shown on how writing if statements inside and outside will create a difference.). <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i+1 and %</span>should be used.",
                        "decoration": {
                            "type": "number",
                            "value": 8
                        }
                    },
                    {
                        "component": "text",
                        "value": "Take the same example to print the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">even numbers</span> between <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20 to 40</span>. But here do <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i+2</span> to do it.",
                        "decoration": {
                            "type": "number",
                            "value": 9
                        }
                    }
                ]
            },
            {
                "id": "5442",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "introduction",
                "slug": "loops-101_json__QuestionSet1/introduction_json",
                "sequence_num": 100,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 1,
                        "value": "Question Set 1"
                    },
                    {
                        "component": "text",
                        "value": "In this section, some questions are given. Solutions to some of the questions are given. If you want, you can see the solutions directly. But that will not at all help you. It would be better that first try that question for at least 1 hour by yourself and then for 0.5 hours with your friend and find the solution. There is no other better way to clarify your concepts."
                    },
                    {
                        "component": "text",
                        "value": "For all those solutions which don't have a video, try to create a video for those solutions. By this, you will also learn how to discuss and talk about the concepts and this will be very helpful during the interviews. You can make the videos and <span style=\"\">upload</span> them, and together with the links, you can share them as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">comments</span> below the questions."
                    }
                ]
            },
            {
                "id": "5457",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "question0",
                "slug": "loops-101_json__QuestionSet1/question0_json",
                "sequence_num": 101,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/question0.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 0"
                    },
                    {
                        "component": "text",
                        "value": "Make a program that prints all the numbers from 1 to 100."
                    },
                    {
                        "component": "text",
                        "value": "You should get the following as an <span style=\"\">output</span>."
                    },
                    {
                        "component": "text",
                        "value": "1<br>2<br>3<br>4<br>5<br>6<br>\u2026<br>\u2026<br>\u2026<br>97<br>98<br>99<br>100"
                    }
                ]
            },
            {
                "id": "5458",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "question1",
                "slug": "loops-101_json__QuestionSet1/question1_json",
                "sequence_num": 102,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 1"
                    },
                    {
                        "component": "text",
                        "value": "Write a program that prints all those numbers from 1 to 100  which are divisible by 7."
                    },
                    {
                        "component": "text",
                        "value": "The <span style=\"\">output</span> should come as follows :-"
                    },
                    {
                        "component": "text",
                        "value": "7<br>14<br>21<br>28<br>35<br>42<br>49<br>56<br>63<br>70<br>77<br>84<br>91<br>98"
                    }
                ]
            },
            {
                "id": "5461",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "question2",
                "slug": "loops-101_json__QuestionSet1/question2_json",
                "sequence_num": 103,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 2"
                    },
                    {
                        "component": "text",
                        "value": "Write a program that uses <span style=\"\">loops</span> to print the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">sum</span> of all the numbers from 1 to 100."
                    },
                    {
                        "component": "text",
                        "value": "For that you have to calculate the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">sum</span> of all numbers from 1 to 100."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1+2+3+4 +5+6+7....+95+96+97+98+99+100</span> "
                    },
                    {
                        "component": "text",
                        "value": "Then print the sum."
                    }
                ]
            },
            {
                "id": "5460",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "question3",
                "slug": "loops-101_json__QuestionSet1/question3_json",
                "sequence_num": 104,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 3"
                    },
                    {
                        "component": "text",
                        "value": "Make a <span style=\"\">loop</span> that <span style=\"\">inputs</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">10</span> numbers. After taking the <span style=\"\">input</span> prints the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">sum of all those numbers</span>."
                    },
                    {
                        "component": "text",
                        "value": "This program will run like this. Every time use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">input()</span> to take the numbers as an <span style=\"\">input</span>."
                    },
                    {
                        "component": "text",
                        "value": "Step 1 of 10 :- Enter any number &gt; 10<br>Step 2 of 10 :- Enter any number &gt; 16<br>Step 3 of 10 :- Enter any number &gt; 9<br>Step 4 of 10 :- Enter any number &gt; 10<br>Step 5 of 10 :- Enter any number &gt; 56<br>Step 6 of 10 :- Enter any number &gt; 78<br>Step 7 of 10 :- Enter any number &gt; 98<br>Step 8 of 10 :- Enter any number &gt; 43<br>Step 9 of 10 :- Enter any number &gt; 21<br>Step 10 of 10 :- Enter any number &gt; 76"
                    },
                    {
                        "component": "text",
                        "value": "Total Sum: 417"
                    },
                    {
                        "component": "text",
                        "value": "In the final line, <b>Total Sum: 417</b> will be printed,. This will be printed because sum of <b>10+16+9+10+56+78+98+43+21+76</b> is <b>417</b>."
                    }
                ]
            },
            {
                "id": "5459",
                "parent_exercise_id": "5442",
                "course_id": "193",
                "name": "question4",
                "slug": "loops-101_json__QuestionSet1/question4_json",
                "sequence_num": 105,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet1/question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 4"
                    },
                    {
                        "component": "text",
                        "value": "Print this pattern using <span style=\"\">Loops</span>. "
                    },
                    {
                        "component": "text",
                        "value": "<b>1, -2, 3, -4, 5, -6 ..99, -100</b>"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Hint :"
                    },
                    {
                        "component": "text",
                        "value": "Notice that first number is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">positive</span>, and the second number is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">negative</span>, then again a positive and then negative number and so on should be printed. Pattern looks similar to this <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Positive (+) Number</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Negative (-) Number</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Positive (+) Number</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Negative (-) Number</span> and so on."
                    },
                    {
                        "component": "text",
                        "value": "We can make any number negative by mutiplying it by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">-1</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "text",
                        "value": "10 * -1 = -10<br>2 * -1 = 2"
                    },
                    {
                        "component": "text",
                        "value": "You can use the above <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Hint</span> to write the program."
                    }
                ]
            },
            {
                "id": "5440",
                "parent_exercise_id": "5440",
                "course_id": "193",
                "name": "introduction",
                "slug": "loops-101_json__Counters/introduction_json",
                "sequence_num": 200,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/Counters/introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "What is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Counter</span>?"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Counter</span> is a <span style=\"\">variable</span> where we assign a value and it is also a <b>good <span style=\"\">variable</span></b> which decides that our <span style=\"\">loop</span> will run from where to where."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example :-"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "count=1<br>While count<=5:<br>&emsp;print(\"Working\")<br>&emsp;count = count + 1"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Let us understand Counter with the help of an example.</span>"
                    },
                    {
                        "component": "text",
                        "value": "In the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> <span style=\"\">variable</span> we give a number that tells that the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop</span> will run from where to where. The <span style=\"\">loop</span> keeps on running <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span> the <span style=\"\">loop</span> condition becomes <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span>,"
                    },
                    {
                        "component": "text",
                        "value": "<b>Now we will try to understand different parts of the example.</b>"
                    },
                    {
                        "component": "text",
                        "value": "We have defined a <span style=\"\">variable</span> with a <span style=\"\">variable</span> name as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span>. Now we are telling the <span style=\"\">variable</span>, that we will run the <span style=\"\">loop</span> from 1 to 5. The starting point of the <span style=\"\">loop</span> is 1 and we will print <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">\"Working\"</span>. The <span style=\"\">loop</span> will stop working when the value of the count is 6 and at that time the <span style=\"\">loop</span> condition becomes <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span>."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1&lt;=5</span> condition <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span> <span style=\"\">loop</span> will run."
                    },
                    {
                        "component": "text",
                        "value": "The <span style=\"\">loop</span> will increment and run till <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5&lt;=5</span>."
                    },
                    {
                        "component": "text",
                        "value": "Now, after incrementing, when the count value becomes 6 then the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">6&lt;=5</span> condition becomes <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span> then the <span style=\"\">loop</span> will stop working."
                    },
                    {
                        "component": "text",
                        "value": "So, this is how the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> works."
                    }
                ]
            },
            {
                "id": "5448",
                "parent_exercise_id": "5440",
                "course_id": "193",
                "name": "examples",
                "slug": "loops-101_json__Counters/examples_json",
                "sequence_num": 201,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/Counters/examples.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Counter Examples</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this section, some examples are given. You need to understand these examples very carefully, to figure out how they work? You have to do a <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">dry run</span> of each of the examples and notice that how the dry run works."
                    },
                    {
                        "component": "text",
                        "value": "You can also add some more examples as comments so that your, as well as your peer's concept, becomes clear."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example 1"
                    },
                    {
                        "component": "text",
                        "value": "You have to print multiples of 3 from 1 to 40. While writing the <span style=\"\">code</span> keep in mind that the counter starts from 891."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Solution to Example 1"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 891<br>while i < 931:<br>  z = i - 890<br>  if z % 3 == 0:<br>&emsp;print(z)<br>  i = i + 1"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example 2"
                    },
                    {
                        "component": "text",
                        "value": "Write a <span style=\"\">code</span> to print all the multiples of 5 from 1 to 50. But you don't need to use % (modulus <span style=\"\">operator</span>). Do without it."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Solution to Example 2"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>while i <= 50:<br>  if i != 0:<br>&emsp;print(i)<br>  i = i + 5"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Example 3"
                    },
                    {
                        "component": "text",
                        "value": "Print all the odd numbers between 50 to 100."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Solution 1 to Example 3"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 49<br>while i <= 98:<br>  i = i + 2<br>  print(i)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Solution 2 to Example 3"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 50<br>while i <= 100:<br>  if i % 2 != 0:<br>&emsp;print(i)<br>  i = i + 1"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Solution 3 to Example 3"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 400<br>while i >= 350:<br>  z = i - 300<br>  if z % 2 != 0:<br>&emsp;  print(z)<br>  i = i - 1"
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Example 4"
                    },
                    {
                        "component": "text",
                        "value": "Print the numbers from 1 to 10 without using increment."
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Solution 1 to Example 4"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = -1<br>while a >= (-10):<br>  print(-a)<br>  a = a -1"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Solution 2 to Example 4"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = 1 <br>while a <= 10:<br>  print (a)<br>  a = a-(-1)"
                    },
                    {
                        "component": "header",
                        "variant": 3,
                        "value": "Solution 3 to Example 4"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "a = 1<br>while a !=11:<br>  print(a)<br>  a-=-1"
                    }
                ]
            },
            {
                "id": "5441",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "introduction",
                "slug": "loops-101_json__QuestionSet2/introduction_json",
                "sequence_num": 300,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question Set 2"
                    },
                    {
                        "component": "text",
                        "value": "This set of questions is similar to the last set of questions. Solve it in the same way."
                    },
                    {
                        "component": "text",
                        "value": "In this section, some questions are given. Solutions to some of the questions are given. If you want, you can see the solutions directly. But that will not at all help you. It would be better that first try that question for at least 1 hour by yourself and then for 0.5 hours with your friend and find the solution. There is no other better way to clarify your concepts."
                    },
                    {
                        "component": "text",
                        "value": "For all those solutions which don't have a video, try to create a video for those solutions. By this, you will also learn how to discuss and talk about the concepts and this will be very helpful during the interviews. You can make the videos and <span style=\"\">upload</span> them, and together with the links, you can share them as comments below the questions."
                    }
                ]
            },
            {
                "id": "5450",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question1",
                "slug": "loops-101_json__QuestionSet2/question1_json",
                "sequence_num": 301,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 1"
                    },
                    {
                        "component": "text",
                        "value": "Make a program that prints all those numbers from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 100</span> which are <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">divisible by 7</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :"
                    },
                    {
                        "component": "text",
                        "value": "The <span style=\"\">loop</span> that you will write will start from 556."
                    },
                    {
                        "component": "text",
                        "value": "Your <span style=\"\">output</span> should be as follows."
                    },
                    {
                        "component": "text",
                        "value": "7<br>14<br>21<br>28<br>35<br>42<br>49<br>56<br>63<br>70<br>77<br>84<br>91<br>98"
                    }
                ]
            },
            {
                "id": "5451",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "solution1",
                "slug": "loops-101_json__QuestionSet2/solution1_json",
                "sequence_num": 302,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/solution1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Solution"
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question"
                    },
                    {
                        "component": "text",
                        "value": "Print this pattern."
                    },
                    {
                        "component": "code",
                        "type": "other",
                        "title": "",
                        "value": "#<br>##<br>###<br>####<br>#####<br>######<br>#######"
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Solution"
                    },
                    {
                        "component": "text",
                        "value": "The solution to this question is given. This solution is written to give you more clarity on the concept. But, it would be much better if you try to solve it at first by yourself without looking at the solution."
                    },
                    {
                        "component": "text",
                        "value": "We will understand a very small concept before understanding the solution. Suppose if we write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4*3</span> then <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">12</span> will come as we are multiplying two <span style=\"\">integers</span>."
                    },
                    {
                        "component": "text",
                        "value": "Similarly, if we multiply a <span style=\"\">string</span> with an <span style=\"\">integer</span> then it will behave differently."
                    },
                    {
                        "component": "code",
                        "type": "other",
                        "title": "",
                        "value": ">>> 'navgurukul' * 3<br>'navgurukulnavgurukulnavgurukul'"
                    },
                    {
                        "component": "text",
                        "value": "See carefully, here if we write <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">\"navgurukul\"*3</span> then <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">navgurukul</span> is printed <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3</span> times. Similarly, if we do <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">hello * 5</span>, then <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">hello</span> is printed <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5</span> times."
                    },
                    {
                        "component": "code",
                        "type": "other",
                        "title": "",
                        "value": ">>> 'hello' * 5<br>'hellohellohellohellohello'"
                    },
                    {
                        "component": "text",
                        "value": "Before writing the program we will observe some important things."
                    },
                    {
                        "component": "text",
                        "value": "In this pattern there are <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span> lines.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "the First line has one <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">#</span>, the second line has 2 <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">#</span>, the third line has 3 <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">#</span>.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Means the number of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">#</span> increases with the number of lines.",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "Its solution will be as follows:-"
                    },
                    {
                        "component": "code",
                        "type": "other",
                        "title": "",
                        "value": "i = 1 # start the counter by 1<br>while i <= 7: #Because our program has 7 lines so the program will run for 7 times.<br>  print('#'*i)<br>  i = i + 1"
                    }
                ]
            },
            {
                "id": "5449",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question2",
                "slug": "loops-101_json__QuestionSet2/question2_json",
                "sequence_num": 303,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 2"
                    },
                    {
                        "component": "text",
                        "value": "Make a program that should do the following thing from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 100</span>."
                    },
                    {
                        "component": "text",
                        "value": "Numbers that are divisible by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3</span>, you have to print \"<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Nav\"</span>. ",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Numbers that are divisible by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span> so that <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">\"Gurukul\"</span> is printed.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Numbers that are divisible by both <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span>, print <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">\"NavGurukul\"</span> there.",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "If the number does not come in the above three cases then print the number only.",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "Your <span style=\"\">output</span> should look like this."
                    },
                    {
                        "component": "text",
                        "value": "1<br>2<br>Nav<br>4<br>5<br>Nav<br>Gurukul<br>8<br>Nav<br>10<br>11<br>Nav<br>13<br>Gurukul<br>Nav<br>16<br>17<br>Nav<br>19<br>20<br>NavGurukul<br>22<br>23<br>Nav<br>25<br>26<br>Nav<br>Gurukul<br>29<br>Nav<br>31<br>32<br>Nav<br>34<br>Gurukul<br>Nav<br>37<br>38<br>Nav<br>40<br>41<br>NavGurukul<br>43<br>44<br>Nav<br>46<br>47<br>Nav<br>Gurukul<br>50<br>Nav<br>52<br>53<br>Nav<br>55<br>Gurukul<br>Nav<br>58<br>59<br>Nav<br>61<br>62<br>NavGurukul<br>64<br>65<br>Nav<br>67<br>68<br>Nav<br>Gurukul<br>71<br>Nav<br>73<br>74<br>Nav<br>76<br>Gurukul<br>Nav<br>79<br>80<br>Nav<br>82<br>83<br>NavGurukul<br>85<br>86<br>Nav<br>88<br>89<br>Nav<br>Gurukul<br>92<br>Nav<br>94<br>95<br>Nav<br>97<br>Gurukul<br>Nav<br>100"
                    }
                ]
            },
            {
                "id": "5452",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question3",
                "slug": "loops-101_json__QuestionSet2/question3_json",
                "sequence_num": 304,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 3"
                    },
                    {
                        "component": "text",
                        "value": "Make a <span style=\"\">loop</span> that <span style=\"\">inputs</span> 10 numbers. After taking the <span style=\"\">input</span> prints the sum of all those numbers."
                    },
                    {
                        "component": "text",
                        "value": "This program will run like this. Everytime  use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">input()</span> to take the numbers as an <span style=\"\">input</span>."
                    },
                    {
                        "component": "text",
                        "value": "Step 1 of 10 :- Enter any number &gt; 10<br>Step 2 of 10 :- Enter any number &gt; 16<br>Step 3 of 10 :- Enter any number &gt; 9<br>Step 4 of 10 :- Enter any number &gt; 10<br>Step 5 of 10 :- Enter any number &gt; 56<br>Step 6 of 10 :- Enter any number &gt; 78<br>Step 7 of 10 :- Enter any number &gt; 98<br>Step 8 of 10 :- Enter any number &gt; 43<br>Step 9 of 10 :- Enter any number &gt; 21<br>Step 10 of 10 :- Enter any number &gt; 76"
                    },
                    {
                        "component": "text",
                        "value": "Total Sum: 417"
                    },
                    {
                        "component": "text",
                        "value": "In the final line, <b>Total Sum: 417</b> will be printed. This will be printed because <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">sum of **10+16+9+10+56+78+98+43+21+76**</span> is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">417</span>."
                    }
                ]
            },
            {
                "id": "5454",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question4",
                "slug": "loops-101_json__QuestionSet2/question4_json",
                "sequence_num": 305,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 4"
                    },
                    {
                        "component": "text",
                        "value": "Make a program to print the numbers from 11 to 101. The <span style=\"\">loop</span> counter should start from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">156</span>."
                    },
                    {
                        "component": "text",
                        "value": "Your <span style=\"\">output</span> should be as follows ."
                    },
                    {
                        "component": "text",
                        "value": "1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10"
                    }
                ]
            },
            {
                "id": "5456",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question5",
                "slug": "loops-101_json__QuestionSet2/question5_json",
                "sequence_num": 306,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question5.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 5"
                    },
                    {
                        "component": "text",
                        "value": "Take an <span style=\"\">integer</span> <span style=\"\">input</span> in a <span style=\"\">variable</span> named <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span>. Take user <span style=\"\">input</span> as many times as the value of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span>."
                    },
                    {
                        "component": "text",
                        "value": "Finally, print the sum of all those numbers which you have taken as an <span style=\"\">input</span>."
                    },
                    {
                        "component": "text",
                        "value": "Example: If the user has put <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span> value as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">6</span>, then take <span style=\"\">input</span> for 6 times."
                    },
                    {
                        "component": "text",
                        "value": "Number of <span style=\"\">inputs</span> to be taken?  6<br>Enter a number &gt; 10<br>Enter a number &gt; 1<br>Enter a number &gt; 56<br>Enter a number &gt; 89<br>Enter a number &gt; 11<br>Enter a number &gt; 12<br>Sum: 179"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span> value  is taken as an <span style=\"\">input</span> in this line<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Number of inputs to be taken?</span> "
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Sum 179</span> is written because <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">10+1+56+89+11+12</span> result into <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">179</span>."
                    },
                    {
                        "component": "text",
                        "value": "Example: Suppose if the user has given the value of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span> as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">10</span>, then the program will run as below, you can give the value of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">n</span> as per your choice."
                    },
                    {
                        "component": "text",
                        "value": "Number of <span style=\"\">inputs</span> to be taken?' 10<br>Enter a number &gt; 11<br>Enter a number &gt; 7<br>Enter a number &gt; 14<br>Enter a number &gt; 76<br>Enter a number &gt; 21<br>Enter a number &gt; 34<br>Enter a number &gt; 86<br>Enter a number &gt; 5<br>Enter a number &gt; 78<br>Enter a number &gt; 64<br>Sum: 396"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Sum 396</span> is because the sum of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">11+7+14+76+21+34+86+5+78+64</span> is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">396</span>."
                    }
                ]
            },
            {
                "id": "5453",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question6",
                "slug": "loops-101_json__QuestionSet2/question6_json",
                "sequence_num": 307,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question6.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 6"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Prime numbers</span> are those numbers that are divisible by 1 or by themselves. Example:-"
                    },
                    {
                        "component": "text",
                        "value": "1.<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">13</span> is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">prime</span> because <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">13</span> is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">perfectly divisible</span> by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">13</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1</span>. It is not <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">perfectly divisible</span> by any other number."
                    },
                    {
                        "component": "text",
                        "value": "2.<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4</span> is not prime number because <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4</span> is perfectly divisible by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4</span>, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1</span>."
                    },
                    {
                        "component": "text",
                        "value": "For <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">prime numbers</span> you have to check that the number is divisible by how many numbers and you have to use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loops</span> also."
                    }
                ]
            },
            {
                "id": "5455",
                "parent_exercise_id": "5441",
                "course_id": "193",
                "name": "question7",
                "slug": "loops-101_json__QuestionSet2/question7_json",
                "sequence_num": 308,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet2/question7.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 1,
                        "value": "Question 7"
                    },
                    {
                        "component": "text",
                        "value": "Print this pattern. "
                    },
                    {
                        "component": "text",
                        "value": "5 5 5 5 5<br>4 4 4 4 4<br>3 3 3 3 3<br>2 2 2 2 2<br>1 1 1 1 1"
                    }
                ]
            },
            {
                "id": "7726",
                "parent_exercise_id": "7726",
                "course_id": "193",
                "name": "introduction",
                "slug": "loops-101_json__LoopConditions/introduction_json",
                "sequence_num": 400,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/LoopConditions/introduction.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Understanding <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Loop Conditions</span>"
                    },
                    {
                        "component": "text",
                        "value": "Let us see this <span style=\"\">code</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i < 100:<br>  print(i)<br>  i = i + 1"
                    },
                    {
                        "component": "text",
                        "value": "This <span style=\"\">code</span> will print numbers from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 99</span>. To better understand the <span style=\"\">code</span> we will try to understand each line."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = 1</span>, here we have taken a variable named as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i</span> and we have put <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1</span> value in it.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while i &lt; 100</span>, here we have defined a loop. By the given while condition, we mean that <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop</span> will run and do whatever is written inside it <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">till</span> the value of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i</span> is less than <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">100</span>.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">print(i)</span> line is written inside the loop. So, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">till</span> the value of i is less than 100, this line will be printed. ",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = i + 1</span>, this line will increase our counter. This line will also tell that how many times the loop will run.",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "Here, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = i + 1</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while i &lt; 100</span> are very important <span style=\"\">statements</span>. after watching this video that what is the exact meaning of these lines and how does the computer understands them, by this way we will be able to write the <span style=\"\">loops</span> in a better way."
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Contents of Video"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "What does it mean to write the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i &lt; 100</span> in the following loop?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i <= 10:<br>print(i)<br>i = i + 1"
                    },
                    {
                        "component": "text",
                        "value": "How does the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop</span> runs? Every time the code within the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loop block</span> is executed the condition is evaluated once again and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span> the condition is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span>, the loop keeps on running. The condition results in a <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">boolean</span> and if the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">boolean</span> is true then the loop runs otherwise it does not run.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Apart from this we can also put the statement like this."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i != 10:<br>print(i)<br>i = i + 1"
                    },
                    {
                        "component": "text",
                        "value": "name: Introduction to Loops"
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Understanding <span style=\"\">Loop</span> Conditions"
                    },
                    {
                        "component": "text",
                        "value": "Let us see this <span style=\"\">code</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i < 100:<br>  print(i)<br>  i = i + 1"
                    },
                    {
                        "component": "text",
                        "value": "This <span style=\"\">code</span> will print numbers from 1 to 99. To better understand the <span style=\"\">code</span> we will try to understand each line."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = 1</span>, here we have taken a variable named as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i</span> and we have put <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1</span> value in it.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while i &lt; 100</span>, here we have defined a loop. By the given while condition, we mean that loop will run and do whatever is written inside it till the value of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i</span> is less than 100.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">print(i)</span> line is written inside the loop. So, till the value of i is less than 100, this line will be printed. ",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = i + 1</span>, this line will increase our counter. This line will also tell that how many times the loop will run.",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "Here, <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i = i + 1</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while i &lt; 100</span> are very important <span style=\"\">statements</span>. after watching this video that what is the exact meaning of these lines and how does the computer understands them, by this way we will be able to write the <span style=\"\">loops</span> in a better way."
                    },
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Contents of Video"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "What does it mean to write the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">i &lt; 100</span> in the following loop?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i <= 10:<br>print(i)<br>i = i + 1"
                    },
                    {
                        "component": "text",
                        "value": "How does the loop run? Every time the code within the loop block is executed the condition is evaluated once again and until the condition is true the loop keeps on running. Basically, the condition results into a boolean and if the boolean is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">True</span> then the loop is run otherwise it is not run.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Apart from this we can also put the statement like this."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while i != 10:<br>print(i)<br>i = i + 1"
                    }
                ]
            },
            {
                "id": "6526",
                "parent_exercise_id": null,
                "course_id": "193",
                "name": "break",
                "slug": "loops-101_json__break_json",
                "sequence_num": 500,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/break.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">break</span>"
                    },
                    {
                        "component": "text",
                        "value": "is a  <b>keyword</b> in python. That helps us in coming out of the and goes to new line which is out of the ."
                    },
                    {
                        "component": "image",
                        "value": "https://merakilearn.s3.ap-south-1.amazonaws.com/course_images/loops-101_json/assets/how-break-statement-works.jpg",
                        "alt": "break_key3"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "index = 0;  <br>while 1:  <br>&emsp;print(index,\" \",end = \"\"),  <br>&emsp;index=index+1;  <br>&emsp;if index == 10:  <br>&emsp;&emsp;break;  <br>print(\"Found at\",index,\"location\")"
                    }
                ]
            },
            {
                "id": "6527",
                "parent_exercise_id": null,
                "course_id": "193",
                "name": "continue",
                "slug": "loops-101_json__continue_json",
                "sequence_num": 600,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/continue.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">continue</span>"
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">continue</span> is also a <span style=\"\">python</span> <b><span style=\"\">key</span>word</b>. <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">continue statement</span> skips some of the <span style=\"\">statements</span> of the <span style=\"\">loop</span> and <span style=\"\">executes</span> the other <span style=\"\">statements</span>."
                    },
                    {
                        "component": "image",
                        "value": "https://merakilearn.s3.ap-south-1.amazonaws.com/course_images/loops-101_json/assets/how-continue-statement-works.jpg",
                        "alt": "continue_key3"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while(i <= 10):<br>&emsp;if(i == 5):<br>&emsp;&emsp; print(\"Skipped Element :\", i)<br>&emsp;  continue<br>&emsp;print(i)"
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "<span style=\"\">Output</span> :-"
                    },
                    {
                        "component": "text",
                        "value": "1<br>2<br>3<br>4<br>Skipped Element: 5<br>6<br>7<br>8<br>9<br>10"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "counter = 0<br>string = \"navgurukul\"<br>while (counter < len(string)):<br>&emsp;counter += 1<br><br>&emsp;if string[counter] == \"a\":<br>&emsp;&emsp;continue<br><br>&emsp;if string[counter] == \"u\":<br>&emsp;&emsp;continue<br>&emsp;<br>&emsp;print(string[counter])<br><br>print(\"The end\", string[counter])"
                    },
                    {
                        "component": "youtube",
                        "value": "https://www.youtube.com/watch?v=rOfNF7gj5t0"
                    }
                ]
            },
            {
                "id": "5443",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "intro",
                "slug": "loops-101_json__QuestionSet3/intro_json",
                "sequence_num": 700,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/intro.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question Set 3"
                    },
                    {
                        "component": "text",
                        "value": "In this section some questions are given. <br>These questions will  clarify our concepts further."
                    }
                ]
            },
            {
                "id": "5462",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question1",
                "slug": "loops-101_json__QuestionSet3/loops-code-question1_json",
                "sequence_num": 701,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 1"
                    },
                    {
                        "component": "text",
                        "value": "Write a <span style=\"\">code</span> that prints all those numbers  between <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20 to 100</span> which are divisible by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> that means when you divide any number by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2</span> the remainder comes as <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">0</span>."
                    }
                ]
            },
            {
                "id": "5463",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question2",
                "slug": "loops-101_json__QuestionSet3/loops-code-question2_json",
                "sequence_num": 702,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 2"
                    },
                    {
                        "component": "text",
                        "value": "Write a <span style=\"\">code</span> that <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">prints</span> all those numbers  between <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 100</span> which are divisible by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span> that means when you divide any number by <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span> the remainder comes as 0."
                    }
                ]
            },
            {
                "id": "5464",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question3",
                "slug": "loops-101_json__QuestionSet3/loops-code-question3_json",
                "sequence_num": 703,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 3"
                    },
                    {
                        "component": "text",
                        "value": "Write a program that calculates the \"total\" from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">12 to 421</span>."
                    }
                ]
            },
            {
                "id": "5467",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question4",
                "slug": "loops-101_json__QuestionSet3/loops-code-question4_json",
                "sequence_num": 704,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 4"
                    },
                    {
                        "component": "text",
                        "value": "Write a <span style=\"\">code</span> that calculates the sum of those numbers from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">30 to 420</span> which are <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">multiples of 8</span> that means those numbers come in the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">table</span> of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">8</span>."
                    }
                ]
            },
            {
                "id": "5465",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question5",
                "slug": "loops-101_json__QuestionSet3/loops-code-question5_json",
                "sequence_num": 705,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question5.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 5"
                    },
                    {
                        "component": "text",
                        "value": "Take <span style=\"\">input</span> of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">weights</span> of 11 people and then print their <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">average</span> and then check whether the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">average weight</span> is a multiple of 5 or not? This means that when you will divide the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">average weight by 5</span>, the remainder should be <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">0</span>."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "Here you have to use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">input</span> function. You can also use raw <span style=\"\">input</span> to take the weights as <span style=\"\">inputs</span>, inside the <span style=\"\">loop</span>."
                    }
                ]
            },
            {
                "id": "5466",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question6",
                "slug": "loops-101_json__QuestionSet3/loops-code-question6_json",
                "sequence_num": 706,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question6.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 6"
                    },
                    {
                        "component": "text",
                        "value": "Write a <span style=\"\">code</span> to print this pattern."
                    },
                    {
                        "component": "text",
                        "value": "<b>1, -2, 3, -4, 5, -6 ..99, -100</b>"
                    }
                ]
            },
            {
                "id": "5468",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question7",
                "slug": "loops-101_json__QuestionSet3/loops-code-question7_json",
                "sequence_num": 707,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question7.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 7"
                    },
                    {
                        "component": "text",
                        "value": "Now, we will make a game using <span style=\"\">loops</span>. We will call this game a <b>guessing game</b>."
                    },
                    {
                        "component": "text",
                        "value": "In this game we take any number, let us suppose this number is <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number 5</span></b>.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "After this we take any number as an input from the user between <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 to 10</span></b>. The user tries to guess this number.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Suppose the user gives <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3</span>as an input. We will then check if <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3</span> is equal to 5 or not?",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">3 is not equal to 5</span> so we will ask the user for another input.",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "Now, we will check if that number is equal to 5 or not.",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    },
                    {
                        "component": "text",
                        "value": "User will get <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5 chances</span></b> to guess.",
                        "decoration": {
                            "type": "number",
                            "value": 6
                        }
                    },
                    {
                        "component": "text",
                        "value": "If he guessed right within the 5 chances he wins and if he guesses wrong then loses the game."
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Hint :"
                    },
                    {
                        "component": "text",
                        "value": "Study about <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">break statement</span> in <span style=\"\">python</span>."
                    }
                ]
            },
            {
                "id": "5469",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question8",
                "slug": "loops-101_json__QuestionSet3/loops-code-question8_json",
                "sequence_num": 708,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question8.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 8"
                    },
                    {
                        "component": "text",
                        "value": "Now, we will change the previous game a little. We only checked whether the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number</span> given by the user is equal to the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">input number</span> or not.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "Now, we will also tell the user if the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number</span> given by the user is greater or smaller than the input number.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "If the user gives <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4</span> as a number then we will check if <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">4 is less than 5</span> or not so it's true then we will print \"Number entered by you entered is small, try one more time \".",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "We will again take input from the user. If the user gives <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7</span>as a number then we will check if <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">7 is less than 5 or not</span> so it is <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">False</span> then we will print \"Number entered by you entered is greater, try one more time \".",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "If the user gives <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5</span> as input then this <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">number</span> is equal to the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">given number</span> then we will print \"Wow you guessed the correct number\".",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    },
                    {
                        "component": "text",
                        "value": "User will keep on <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">guessing</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">until</span> all the chances are finished.",
                        "decoration": {
                            "type": "number",
                            "value": 6
                        }
                    },
                    {
                        "component": "text",
                        "value": "If we will give such types of hints to the user, it will become easier for him to solve the question."
                    }
                ]
            },
            {
                "id": "5470",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question9",
                "slug": "loops-101_json__QuestionSet3/loops-code-question9_json",
                "sequence_num": 709,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question9.json",
                "solution": null,
                "content": [
                    {
                        "component": "text",
                        "value": "Make an algorithm that takes <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2 numbers as inputs</span> from the user. Then we will multiply those numbers and print the result. Example :-, if we <span style=\"\">input</span> <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">5 and 4</span> then <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">20</span> should be printed. "
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Note :-"
                    },
                    {
                        "component": "text",
                        "value": "Don't use <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">*</span> multiply <span style=\"\">operator</span> to <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">multiply</span> , you can use any other <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">operators</span> like <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">+,-</span>)."
                    }
                ]
            },
            {
                "id": "5471",
                "parent_exercise_id": "5443",
                "course_id": "193",
                "name": "loops-code-question10",
                "slug": "loops-101_json__QuestionSet3/loops-code-question10_json",
                "sequence_num": 710,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/QuestionSet3/loops-code-question10.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 10"
                    },
                    {
                        "component": "text",
                        "value": "Make an algorithm that prints the first 100 numbers of the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">fibonacci series</span>."
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Fibonacci series</span> is shown here,<br><b>0, 1, 1, 2, 3, 5, 8, 13, 21, 34</b>"
                    },
                    {
                        "component": "text",
                        "value": "In this series <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">first_number</span> is 0 and<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">second_number</span> is 1. After this, the next number will be the sum of the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">last two numbers</span>."
                    },
                    {
                        "component": "text",
                        "value": "Like, third_number = <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">first_number</span> + <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">second_number</span>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">1 = 0 + 1</span>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">fourth_number</span> = <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">second_number</span> + <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">third_number</span>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">2 = 1 + 1</span>",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "header",
                        "variant": 4,
                        "value": "Hint :"
                    },
                    {
                        "component": "text",
                        "value": "Now, think about how you can access the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">current counter</span> and previous counter value."
                    }
                ]
            },
            {
                "id": "5445",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "intro",
                "slug": "loops-101_json__OutputOfCode/intro_json",
                "sequence_num": 800,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/intro.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "<span style=\"\">Code</span> <span style=\"\">Output</span>"
                    },
                    {
                        "component": "text",
                        "value": "Now, we will do some questions related to <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">While Loop</span> which will give us more clarity on <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loops</span>."
                    }
                ]
            },
            {
                "id": "5476",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "question1",
                "slug": "loops-101_json__OutputOfCode/question1_json",
                "sequence_num": 801,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 1"
                    },
                    {
                        "component": "text",
                        "value": "What will be the <span style=\"\">output</span> of the following <span style=\"\">code</span> snippet?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "c = 0<br>d = 1<br><br>while c < 3:<br>&emsp;c = c + 1<br>&emsp;d = d * c<br>&emsp;print(\"Loop Ke Andar\", c, d)<br>else:<br>&emsp;print(\"Loop Ke Bahar\", c, d)"
                    }
                ]
            },
            {
                "id": "5477",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "question2",
                "slug": "loops-101_json__OutputOfCode/question2_json",
                "sequence_num": 802,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 2"
                    },
                    {
                        "component": "text",
                        "value": "What will be the <span style=\"\">output</span> of the following <span style=\"\">code</span> snippet?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "n = 6<br>s = 0<br>i = 1<br><br>while i <= n:<br>&emsp;s = s + i<br>&emsp;i = i + 1<br><br>print(s)"
                    }
                ]
            },
            {
                "id": "5478",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "question3",
                "slug": "loops-101_json__OutputOfCode/question3_json",
                "sequence_num": 803,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 3"
                    },
                    {
                        "component": "text",
                        "value": "What will be the <span style=\"\">output</span> of the following <span style=\"\">code</span> snippet?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 2<br>while (i<num):<br>&emsp;if (num%i == 0):<br>&emsp;&emsp;print(num, 'is not a prime number')<br>&emsp;&emsp;break<br>&emsp;i = i + 1<br>else:<br>&emsp;print(num, 'is a prime number')<br>"
                    }
                ]
            },
            {
                "id": "5479",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "question4",
                "slug": "loops-101_json__OutputOfCode/question4_json",
                "sequence_num": 804,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 4"
                    },
                    {
                        "component": "text",
                        "value": "What will be the <span style=\"\">output</span> of the following <span style=\"\">code</span> snippet?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>while(i<5):<br>&emsp;j = 0<br>&emsp;while(j<5): #loop2<br>&emsp;&emsp;if (j > 3): <br>&emsp;&emsp;&emsp;break <br>&emsp;&emsp;else:<br>&emsp;&emsp;&emsp;print(\"*\"), <br>&emsp;&emsp;j = j + 1&emsp;<br>&emsp;print('')<br>&emsp;i = i + 1<br>"
                    }
                ]
            },
            {
                "id": "5480",
                "parent_exercise_id": "5445",
                "course_id": "193",
                "name": "question5",
                "slug": "loops-101_json__OutputOfCode/question5_json",
                "sequence_num": 805,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/OutputOfCode/question5.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 5"
                    },
                    {
                        "component": "text",
                        "value": "What will be the <span style=\"\">output</span> of the following <span style=\"\">code</span> snippet?"
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "x = 0<br>while(x<7):<br>&emsp;if (x == 3 or x==5):<br>&emsp;&emsp;x = x + 1<br>&emsp;&emsp;continue<br>&emsp;print(x)<br>&emsp;x = x + 1"
                    }
                ]
            },
            {
                "id": "5444",
                "parent_exercise_id": "5444",
                "course_id": "193",
                "name": "intro",
                "slug": "loops-101_json__DebugCode/intro_json",
                "sequence_num": 900,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/DebugCode/intro.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Debug <span style=\"\">Code</span>"
                    },
                    {
                        "component": "text",
                        "value": "Now, we will debug the <span style=\"\">code</span> related to <span style=\"\">loops</span>."
                    }
                ]
            },
            {
                "id": "5472",
                "parent_exercise_id": "5444",
                "course_id": "193",
                "name": "question1",
                "slug": "loops-101_json__DebugCode/question1_json",
                "sequence_num": 901,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/DebugCode/question1.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 1"
                    },
                    {
                        "component": "text",
                        "value": "There are some <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span> in the <span style=\"\">code</span> given below. Now you have to find those <span style=\"\">errors</span> and tell the number of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "index = 1<br>while(index < 10):<br>&emsp;print(index)<br>&emsp;index = index + 1"
                    }
                ]
            },
            {
                "id": "5473",
                "parent_exercise_id": "5444",
                "course_id": "193",
                "name": "question2",
                "slug": "loops-101_json__DebugCode/question2_json",
                "sequence_num": 902,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/DebugCode/question2.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 2"
                    },
                    {
                        "component": "text",
                        "value": "There are some <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span> in the <span style=\"\">code</span> given below. Now you have to find those <span style=\"\">errors</span> and tell the number of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 1<br>while(i <= 140):<br>&emsp;if(i % 3 == 0):<br>&emsp;sum = sum + i<br>&emsp;i = i - 1<br>print(sum)"
                    }
                ]
            },
            {
                "id": "5474",
                "parent_exercise_id": "5444",
                "course_id": "193",
                "name": "question3",
                "slug": "loops-101_json__DebugCode/question3_json",
                "sequence_num": 903,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/DebugCode/question3.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 3"
                    },
                    {
                        "component": "text",
                        "value": "There are some <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span> in the <span style=\"\">code</span> given below. Now you have to find those <span style=\"\">errors</span> and tell the number of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "<br>i=0<br>while(i<10):<br>j = 0<br>&emsp;while(j<=5):<br>&emsp;&emsp;print(j)<br>&emsp;j = j + 1<br>&emsp;i = i + 1<br>"
                    }
                ]
            },
            {
                "id": "5475",
                "parent_exercise_id": "5444",
                "course_id": "193",
                "name": "question4",
                "slug": "loops-101_json__DebugCode/question4_json",
                "sequence_num": 904,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/DebugCode/question4.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Question 4"
                    },
                    {
                        "component": "text",
                        "value": "There are some <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span> in the <span style=\"\">code</span> given below. Now you have to find those <span style=\"\">errors</span> and tell the number of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">bugs</span>."
                    },
                    {
                        "component": "code",
                        "type": "python",
                        "title": "",
                        "value": "i = 0<br>num = int(input(\"Enter your number:- \"))<br>while(i <= num):<br>&emsp;if(num > 0):<br>&emsp;&emsp;print(it is positive)<br>&emsp;elif(num < 0):<br>&emsp;&emsp;print(it is negetive)<br>&emsp;else :<br>&emsp;&emsp;print(zero)<br>&emsp;i = i + 1<br>"
                    }
                ]
            },
            {
                "id": "5446",
                "parent_exercise_id": "5446",
                "course_id": "193",
                "name": "intro",
                "slug": "loops-101_json__BonusTask/intro_json",
                "sequence_num": 1000,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/BonusTask/intro.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "<span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Becoming A Programmer</span>"
                    },
                    {
                        "component": "text",
                        "value": "In this task you will study about 6 new concepts of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">loops</span>."
                    },
                    {
                        "component": "text",
                        "value": "Firstly, you have to study about three new concepts from <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">python's website</span>."
                    },
                    {
                        "component": "text",
                        "value": "https://www.w3schools.com/python/python<i>while</i>loops.asp",
                        "decoration": {
                            "type": "bullet"
                        }
                    },
                    {
                        "component": "text",
                        "value": "Then, you will study the three new concepts from <b><span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">Stackoverflow</span></b>."
                    },
                    {
                        "component": "text",
                        "value": "You will write on a google doc about what was your understanding regarding the topic and share it with your mentor and you will also do some questions related to that concept."
                    },
                    {
                        "component": "text",
                        "value": "You will take a class in which u will explain whatever concept you studied?"
                    }
                ]
            },
            {
                "id": "5447",
                "parent_exercise_id": "5447",
                "course_id": "193",
                "name": "intro",
                "slug": "loops-101_json__InterviewQuestions/intro_json",
                "sequence_num": 1100,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/InterviewQuestions/intro.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Interview Questions"
                    },
                    {
                        "component": "text",
                        "value": "Write a program to find the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">greatest common divisor (GCD)</span> or <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">highest common factor (HCF)</span> of given two numbers.",
                        "decoration": {
                            "type": "number",
                            "value": 1
                        }
                    },
                    {
                        "component": "text",
                        "value": "What is the <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">syntax of while loop</span> in python?.",
                        "decoration": {
                            "type": "number",
                            "value": 2
                        }
                    },
                    {
                        "component": "text",
                        "value": "Difference between <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while loop</span> and <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">for loop</span> in python?.",
                        "decoration": {
                            "type": "number",
                            "value": 3
                        }
                    },
                    {
                        "component": "text",
                        "value": "What is the workflow of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while loop</span> in python?.",
                        "decoration": {
                            "type": "number",
                            "value": 4
                        }
                    },
                    {
                        "component": "text",
                        "value": "What is the work of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">counter</span> in the while loop?.",
                        "decoration": {
                            "type": "number",
                            "value": 5
                        }
                    },
                    {
                        "component": "text",
                        "value": "Why are we using a <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while loop</span> or what is the benefit of <span style=\"color: #eb9371; background-color: rgba(39, 41, 43, 0.83); box-shadow: 2px 2px 2px rgba(22, 9, 1, 0.6); border-radius: 2px; padding: 2px\">while loop</span>?.",
                        "decoration": {
                            "type": "number",
                            "value": 6
                        }
                    }
                ]
            },
            {
                "id": "7734",
                "parent_exercise_id": "5447",
                "course_id": "193",
                "name": "Assessment",
                "slug": "loops-101_json__InterviewQuestions/Assessment_json",
                "sequence_num": 1101,
                "review_type": "manual",
                "submission_type": null,
                "github_link": "https://github.com/navgurukul/newton/tree/master/loops-101_json/InterviewQuestions/Assessment.json",
                "solution": null,
                "content": [
                    {
                        "component": "header",
                        "variant": 2,
                        "value": "Assessment"
                    },
                    {
                        "component": "text",
                        "value": "Please fill this quiz with proper details to understand how much of this course did you understand."
                    },
                    {
                        "component": "text",
                        "value": "<a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfFw-YQ5QBBpepw-McSBnJU7yGsO0wfnji-g2mu7YPq2va6uA/viewform\">click Here</a>"
                    }
                ]
            }
        ]
    }
}